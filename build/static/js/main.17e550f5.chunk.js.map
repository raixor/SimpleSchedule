{"version":3,"sources":["utils/theme.ts","components/line.tsx","components/live.tsx","components/prevNext.tsx","index.tsx"],"names":["colors","blueDark","blue","yellow","Container","styled","div","_templateObject","Line","react_default","a","createElement","live_templateObject","Body","_templateObject2","Left","_templateObject3","Title","_templateObject4","Date","_templateObject5","SocialContainer","_templateObject6","Link","_templateObject7","Live","_ref","start","end","title","slug","useEffect","script","document","src","getElementsByClassName","appendChild","live_Container","live_Date","toDate","getUTCHours","getUTCMinutes","line","href","concat","className","class","data-show-count","prevNext_templateObject","prevNext_templateObject2","prevNext_templateObject3","prevNext_templateObject4","prevNext_templateObject5","prevNext_templateObject6","PrevNext","prevNext_Container","prevNext_Left","prevNext_Date","prevNext_Body","onClick","prevNext_Title","prevNext_Link","Hour","src_templateObject","Widget","n","_useState","useState","moment","_useState2","Object","slicedToArray","time","setTime","_useState3","_useState4","chats","setChats","_useState5","_useState6","prev","setPrev","_useState7","_useState8","live","setLive","_useState9","_useState10","next","setNext","setInterval","add","subtract","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","fetch","sent","t0","t1","toConsumableArray","json","t2","_ref2","image","speaker","objectSpread","avatar","t3","map","t4","b","valueOf","t5","sort","stop","apply","this","arguments","getChats","chat","i","isBetween","style","fontFamily","backgroundColor","color","prevNext","components_live","rootElement","getElementById","render","src_Widget"],"mappings":"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","file":"static/js/main.17e550f5.chunk.js","sourcesContent":["const colors = {\n  blueDark: \"#2c1b49\",\n  blue: \"#33214f\",\n  yellow: \"rgba(250, 189, 62, 1)\"\n};\nexport default colors;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../utils/theme\";\n\nconst Container = styled.div`\n  width: 3px;\n  background-color: rgba(250, 250, 250, 0.5);\n  flex-grow: 1;\n`;\n\nconst Line: React.FC = () => {\n  return <Container />;\n};\nexport default Line;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport colors from \"../utils/theme\";\nimport { IChat } from \"../utils/interfaces\";\nimport Line from \"./line\";\n\nconst Container = styled.div`\n  display: flex;\n  height: 150px;\n  background-color: ${colors.blue};\n  border-bottom: 1px solid rgba(250, 250, 250, 0.1);\n`;\nconst Body = styled.div`\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: flex-start;\n  padding: 10px 0px 10px 10px;\n`;\nconst Left = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 20%;\n  padding: 10px 0;\n`;\nconst Title = styled.div`\n  color: white;\n  width: 80%;\n  text-align: left;\n`;\n\nconst Date = styled.div`\n  color: rgba(250, 250, 250, 0.5);\n`;\n\nconst SocialContainer = styled.div``;\nconst Link = styled.a`\n  color: white;\n  text-decoration: none;\n`;\nconst Live: React.FC<IChat> = ({ start, end, title, slug }) => {\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://platform.twitter.com/widgets.js\";\n    document.getElementsByClassName(\"twitter-embed\")[0].appendChild(script);\n  }, []);\n  const getLink = () => {\n    return (\n      // @ts-ignore-begin\n      <a\n        href=\"https://twitter.com/intent/tweet?button_hashtag=DevFestALC19&ref_src=twsrc%5Etfw\"\n        class=\"twitter-hashtag-button\"\n        data-show-count=\"false\"\n      >\n        Tweet #DevFestALC19\n      </a>\n    );\n    // @ts-ignore-end\n  };\n  return (\n    <Container>\n      <Left>\n        <Date>\n          {start.toDate().getUTCHours()}:\n          {start.toDate().getUTCMinutes() === 0\n            ? \"00\"\n            : start.toDate().getUTCMinutes()}\n        </Date>\n        <Line />\n        <Date>\n          {end.toDate().getUTCHours()}:\n          {end.toDate().getUTCMinutes() === 0\n            ? \"00\"\n            : end.toDate().getUTCMinutes()}\n        </Date>\n      </Left>\n      <Body>\n        <Title>\n          <Link href={`https://devfestalicante.com/talk/${slug}`}>{title}</Link>\n          />\n        </Title>\n        <SocialContainer>\n          <div className=\"twitter-embed\">{getLink()}</div>\n        </SocialContainer>\n      </Body>\n    </Container>\n  );\n};\nexport default Live;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { IChat } from \"../utils/interfaces\";\nimport colors from \"../utils/theme\";\nimport Line from \"./line\";\n\nconst Container = styled.div`\n  display: flex;\n  height: 100px;\n  background-color: ${colors.blue};\n  border-bottom: 1px solid rgba(250, 250, 250, 0.1);\n`;\nconst Body = styled.div`\n  width: 70%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  padding: 10px 0px 10px 10px;\n`;\nconst Title = styled.div`\n  color: white;\n  width: 80%;\n  text-align: left;\n`;\n\nconst Date = styled.div`\n  color: rgba(250, 250, 250, 0.25);\n`;\nconst Left = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 20%;\n  padding: 10px 0;\n`;\nconst Link = styled.a`\n  color: rgba(250, 250, 250, 0.25);\n  text-decoration: none;\n`;\nconst PrevNext: React.FC<IChat> = ({ start, end, title, slug }) => {\n  const goTo = () => {};\n  return (\n    <Container>\n      <Left>\n        <Date>\n          {start.toDate().getUTCHours()}:\n          {start.toDate().getUTCMinutes() === 0\n            ? \"00\"\n            : start.toDate().getUTCMinutes()}\n        </Date>\n        {/* <Line /> */}\n        <Date>\n          {end.toDate().getUTCHours()}:\n          {end.toDate().getUTCMinutes() === 0\n            ? \"00\"\n            : end.toDate().getUTCMinutes()}\n        </Date>\n      </Left>\n      <Body onClick={() => goTo()}>\n        <Title>\n          <Link href={`https://devfestalicante.com/talk/${slug}`}>{title}</Link>\n          />\n        </Title>\n      </Body>\n    </Container>\n  );\n};\nexport default PrevNext;\n","import { render } from \"react-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport moment, { Moment } from \"moment\";\nimport Live from \"./components/live\";\nimport PrevNext from \"./components/prevNext\";\nimport colors from \"./utils/theme\";\nimport { IChat } from \"./utils/interfaces\";\nimport styled from \"styled-components\";\n\nconst Hour = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nconst Widget: React.FC = () => {\n  const [time, setTime] = useState(moment());\n  const [chats, setChats] = useState<IChat[]>([]);\n  const [prev, setPrev] = useState<IChat>();\n  const [live, setLive] = useState<IChat>();\n  const [next, setNext] = useState<IChat>();\n  let interval: any;\n  const addZeroBefore = (n: number) => {\n    return (n < 10 ? \"0\" : \"\") + n;\n  };\n  useEffect(() => {\n    interval = setInterval(\n      () =>\n        setTime(\n          moment()\n            .add(1, \"days\")\n            .subtract(8, \"hours\")\n        ),\n      1000\n    );\n    const getChats = async () => {\n      const res = await fetch(\"https://devfestalicante.com/api/talks/public\");\n      setChats(\n        [\n          ...(await res.json()).map(\n            ({ title, start, end, image, speaker, slug }: IChat) => {\n              return {\n                title,\n                start: moment(start),\n                end: moment(end),\n                image: `https://devfestalicante.com${image}`,\n                speaker: {\n                  ...speaker,\n                  avatar: `https://devfestalicante.com${speaker.avatar}`\n                },\n                slug\n              };\n            }\n          )\n        ].sort(\n          (a, b) => a.start.toDate().valueOf() - b.start.toDate().valueOf()\n        )\n      );\n    };\n    getChats();\n  }, []);\n  useEffect(() => {\n    if (time) {\n      chats.map((chat, i) => {\n        if (moment(time).isBetween(chat.start, chat.end)) {\n          setLive(chat);\n          setPrev(chats[i - 1]);\n          setNext(chats[i + 1]);\n        }\n      });\n    }\n  }, [time]);\n  return (\n    <div\n      style={{ fontFamily: \"Product sans\", backgroundColor: colors.blueDark }}\n      className=\"App\"\n    >\n      {/* <div style={{ borderWidth: 1, borderColor: \"black\" }}>\n        {chats.map(c => {\n          return (\n            <div style={{ margin: 10 }}>\n              <div>title: {c.title}</div>\n              <div>start: {c.start.toDate().toUTCString()}</div>\n              <div>end: {c.end.toDate().toUTCString()}</div>\n            </div>\n          );\n        })}\n      </div> */}\n      <Hour>\n        <h2 style={{ color: \"white\" }}>\n          DevFest Alicante {time.toDate().getUTCHours()}:\n          {addZeroBefore(time.toDate().getUTCMinutes())}\n        </h2>\n      </Hour>\n      {prev && <PrevNext {...prev} />}\n      {live && <Live {...live} />}\n      {next && <PrevNext {...next} />}\n    </div>\n  );\n};\nexport default Widget;\n\nconst rootElement = document.getElementById(\"root\");\nrender(<Widget />, rootElement);\n"],"sourceRoot":""}